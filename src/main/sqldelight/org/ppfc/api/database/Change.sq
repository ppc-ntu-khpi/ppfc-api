CREATE TABLE IF NOT EXISTS ChangeDto (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    classroomId INTEGER,
    teacherId INTEGER,
    subjectId INTEGER,
    eventName TEXT,
    isSubject INTEGER NOT NULL,
    lessonNumber INTEGER,
    date TEXT NOT NULL,
    isNumerator INTEGER NOT NULL,
    dayNumber INTEGER NOT NULL,
    FOREIGN KEY (classroomId) REFERENCES ClassroomDto(id) ON DELETE CASCADE,
    FOREIGN KEY (teacherId) REFERENCES TeacherDto(id) ON DELETE CASCADE,
    FOREIGN KEY (subjectId) REFERENCES SubjectDto(id) ON DELETE CASCADE
);

selectAll:
SELECT * FROM ChangeDto;

selectWithParameters:
SELECT * FROM ChangeDto
WHERE (:limit IS NULL OR :limit = 0 OR :limit > 0)
AND (:offset IS NULL OR :offset = 0 OR :offset > 0)
AND (:date IS NULL OR date = :date)
AND (:isNumerator IS NULL OR isNumerator = :isNumerator)
AND (:teacherId IS NULL OR teacherId = :teacherId)
AND (:groupId IS NULL OR id IN (
    SELECT changeId FROM ChangeDtoAndGroupDto WHERE groupId = :groupId
))
LIMIT COALESCE(:limit, 1000000000)
OFFSET COALESCE(:offset, 0);

selectWhereId:
SELECT * FROM ChangeDto WHERE id = :id;

deleteWhereId:
DELETE FROM ChangeDto WHERE id = :id;

deleteAll:
DELETE FROM ChangeDto;

updateWhereId:
UPDATE ChangeDto SET
    classroomId = :classroomId,
    teacherId = :teacherId,
    subjectId = :subjectId,
    eventName = :eventName,
    isSubject = :isSubject,
    lessonNumber = :lessonNumber,
    dayNumber = :dayNumber,
    date = :date,
    isNumerator = :isNumerator
WHERE id = :id;

insertModel:
INSERT INTO ChangeDto(
    classroomId,
    teacherId,
    subjectId,
    eventName,
    isSubject,
    lessonNumber,
    dayNumber,
    date,
    isNumerator
) VALUES ?;

getLastId:
SELECT MAX(id) FROM ChangeDto LIMIT 1;