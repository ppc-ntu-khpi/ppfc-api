CREATE TABLE IF NOT EXISTS ScheduleDto (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    groupId INTEGER NOT NULL,
    classroomId INTEGER NOT NULL,
    teacherId INTEGER NOT NULL,
    subjectId INTEGER,
    eventName TEXT,
    isSubject INTEGER NOT NULL,
    lessonNumber INTEGER NOT NULL,
    dayNumber INTEGER NOT NULL,
    isNumerator INTEGER NOT NULL,
    FOREIGN KEY (groupId) REFERENCES GroupDto(id) ON DELETE CASCADE,
    FOREIGN KEY (classroomId) REFERENCES ClassroomDto(id) ON DELETE CASCADE,
    FOREIGN KEY (teacherId) REFERENCES TeacherDto(id) ON DELETE CASCADE,
    FOREIGN KEY (subjectId) REFERENCES SubjectDto(id) ON DELETE CASCADE
);

selectAll:
SELECT * FROM ScheduleDto;

selectWithParameters:
SELECT * FROM ScheduleDto
WHERE (:limit IS NULL OR :limit = 0 OR :limit > 0)
AND (:offset IS NULL OR :offset = 0 OR :offset > 0)
AND (:dayNumber IS NULL OR dayNumber = :dayNumber)
AND (:isNumerator IS NULL OR isNumerator = :isNumerator)
AND (:groupId IS NULL OR groupId = :groupId)
AND (:teacherId IS NULL OR teacherId = :teacherId)
LIMIT COALESCE(:limit, 1000000000)
OFFSET COALESCE(:offset, 0);

selectWhereId:
SELECT * FROM ScheduleDto WHERE id = :id;

deleteWhereId:
DELETE FROM ScheduleDto WHERE id = :id;

deleteAll:
DELETE FROM ScheduleDto;

updateWhereId:
UPDATE ScheduleDto SET
    groupId = :groupId,
    classroomId = :classroomId,
    teacherId = :teacherId,
    subjectId = :subjectId,
    eventName = :eventName,
    isSubject = :isSubject,
    lessonNumber = :lessonNumber,
    dayNumber = :dayNumber,
    isNumerator = :isNumerator
WHERE id = :id;

insertModel:
INSERT INTO ScheduleDto(
    groupId,
    classroomId,
    teacherId,
    subjectId,
    eventName,
    isSubject,
    lessonNumber,
    dayNumber,
    isNumerator
) VALUES ?;